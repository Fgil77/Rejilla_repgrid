tabla_image_elementos_distancias <- tableGrob(tabla_regular_CONSTRUCTOS_d_distancias2)
tabla_image_elementos_distancias
ggsave("tabla_imagen.png", plot = tabla_image_elementos_distancias, device = "png", width = 8, height = 4, units = "in")
ggsave("tabla_imagen.png", plot = tabla_regular_ELEMENTOS_d_distancias2, device = "png", width = 8, height = 4, units = "in")
ggsave("tabla_imagen.png", plot = tabla_regular_ELEMENTOS_d_distancias2, device = "png", width = 8, height = 4, units = "in")
class(tabla_image_elementos_distancias)
#creamos tabla con grid.table
tabla_image_elementos_distancias <- tableGrob(tabla_regular_CONSTRUCTOS_d_distancias2)
tabla_image_elementos_distancias
ggsave("tabla_imagen.png", plot = tabla_regular_ELEMENTOS_d_distancias2, device = "png", width = 8, height = 4, units = "in")
ggsave("tabla_imagen.png", plot = tabla_image_elementos_distancias, device = "png", width = 8, height = 4, units = "in")
#---IMPRIMIR LA TABLA COMO OBJETO
library(gridExtra)
library(ggplot2)
#creamos tabla con grid.table
tabla_image_elementos_distancias <- tableGrob(tabla_regular_CONSTRUCTOS_d_distancias2)
tabla_image_elementos_distancias
class(tabla_image_elementos_distancias)
ggsave("tabla_imagen.png", plot = tabla_image_elementos_distancias, device = "png", width = 8, height = 4, units = "in")
print(ggsave("tabla_imagen.png", plot = tabla_image_elementos_distancias, device = "png", width = 8, height = 4, units = "in")
)
View(tabla_image_elementos_distancias)
View(tabla_image_elementos_distancias)
View(tabla_image_elementos_distancias)
c <- ggsave("tabla_imagen.png", plot = tabla_image_elementos_distancias, device = "png", width = 8, height = 4, units = "in")
c
c <- ggsave("tabla_imagen.png", plot = tabla_image_elementos_distancias, device = "png", width = 8, height = 4, units = "in")
c
View(av)
#otra forma
library(knitr)
library(kableExtra)
#otra forma
library(knitr)
library(webshot)
#otra forma
install.packages("knitr")
install.packages("knitr")
install.packages("kableExtra")
install.packages("webshot")
library(knitr)
library(kableExtra)
library(knitr)
install.packages("knitr")
install.packages("knitr")
library(knitr)
library(kableExtra)
library(webshot)
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
temp_html <- tempfile(fileext = ".html")
cat(tabla_kable_e_dis, file = temp_html)
webshot(temp_html. "tabla_imagen2.png", cliprect = "viewport")
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
temp_html <- tempfile(fileext = ".html")
cat(tabla_kable_e_dis, file = temp_html)
webshot(temp_html. "tabla_imagen2.png", cliprect = "viewport")
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
temp_html <- tempfile(fileext = ".html")
cat(tabla_kable_e_dis, file = temp_html)
webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport")
install_phantomjs
install.packages(phantomjs)
library(phantomjs)
webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport")
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis
temp_html
cat(tabla_kable_e_dis, file = temp_html)
webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport")
temp_html
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis
# webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport") (esto no funcionó)
install.packages("webshot2")
library(webshot)
library(webshot2)
# webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport") (esto no funcionó)
install.packages("webshot2")
install.packages("webshot2")
#install.packages("webshot2") # PARA IMPRMIR COMO IMAGEN EL ARCHIVO
library(webshot)
library(webshot2)
webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport") #(esto no funcionó)
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis # crea html a partir de la tabla de datos, el styling para dar estilo
temp_html <- tempfile(fileext = ".html")
temp_html
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
#install.packages("webshot2") # PARA IMPRMIR COMO IMAGEN EL ARCHIVO
library(webshot)
library(webshot2)
webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport") #(esto no funcionó)
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
library(readxl)
##install.packages("tidiverse")
library(tidyverse)
library(dplyr)
##install.packages("devtools") #porque lo pide el programa (no volver a instalar)
devtools::install_github("r-lib/conflicted")
repgrid_elementos <- read_excel("C:\\Users\\gilmo\\Desktop\\Repgrid_fgil_2023-12-12_18_57_04.xlsx")
repgrid_elementos
lista_vectores_e <- lapply(repgrid_elementos, as.vector)
lista_vectores_e
T_elementos_fin<- data.frame(lista_vectores_e[3:length(lista_vectores_e)-1])
T_elementos_fin
t_elementos_fin_R <- round(cor(T_elementos_fin),2)
t_elementos_fin_R #correlacion elementos
repgrid_elementos
matriz_e <- as.matrix(repgrid_elementos)
print(matriz_e)
ncol(matriz_e)
nrow(matriz_e)
vector_variables_c <- matriz_e[,1] #saco vector nombre variables
vector_variables_op_c <- matriz_e[,ncol(matriz_e)]
vector_variables_c
vector_variables_op_c
#elimiino las columnas
columnas_a_eliminar <- c(1, ncol(matriz_e))
matriz_e_d <- matriz_e[, -columnas_a_eliminar]
matriz_e_d
Tabla_e_d <- data.frame(matriz_e_d)
Tabla_e_d
# tabla constructos
matriz_c <- t(matriz_e_d)
matriz_c
matriz_cn <- as.numeric(matriz_c)
matriz_cn
matriz_c_def <- matrix(matriz_cn, ncol(matriz_e)-2, nrow(matriz_e))
matriz_c_def
tabla_c <- data.frame(matriz_c_def)
tabla_c
nuevos_nombres <- as.character(vector_variables_c)
colnames(tabla_c) <- nuevos_nombres # para cambiar nombres
tabla_c
tabla_c_R <- round(cor(tabla_c),2)
tabla_c_R #correlacion elementos
#TABLA DISTANCIAS "CONSTRUCTOS"
matriz_c_def_distancias <- round(dist(matriz_c_def),2)
matriz_c_def_distancias
#TABLA DISTANCIAS "ELEMENTOS"
matriz_constructos_d__distancias <- round(dist(Tabla_e_d),2)
matriz_constructos_d__distancias
matriz_elementos_d__distancias2 <- round(dist(matriz_c_def),2)
matriz_elementos_d__distancias2
class(matriz_elementos_d__distancias2)
#----Preparo la tabla de ELEMENTOS distancias
names(Tabla_e_d) #PARA OBTENER UN VECTOR CON LOS NOMBRES DE LAS VARIBLES / TÍTULOS DE LAS COLUMNAS
vector_varible_elementos <- names(Tabla_e_d)
vector_varible_elementos
#-Montamos la tabla
matriz_regular_elementos_d_distancias2 <- as.matrix(matriz_elementos_d__distancias2)
matriz_regular_elementos_d_distancias2
colnames(matriz_regular_elementos_d_distancias2) <- vector_varible_elementos
colnames(matriz_regular_elementos_d_distancias2)
rownames(matriz_regular_elementos_d_distancias2) <- colnames(matriz_regular_elementos_d_distancias2)
tabla_regular_ELEMENTOS_d_distancias2 <- as.data.frame(matriz_regular_elementos_d_distancias2)
tabla_regular_ELEMENTOS_d_distancias2
print(tabla_regular_elementos_d_distancias2)
#Preparo la tabla de CONSTRUCTOS distancias
matriz_regular_constructos_d_distancias2 <- as.matrix(matriz_constructos_d__distancias)
matriz_regular_constructos_d_distancias2
colnames(matriz_regular_constructos_d_distancias2) <- vector_variables_c
colnames(matriz_regular_constructos_d_distancias2)
rownames(matriz_regular_constructos_d_distancias2) <- colnames(matriz_regular_constructos_d_distancias2)
tabla_regular_CONSTRUCTOS_d_distancias2 <- as.data.frame(matriz_regular_constructos_d_distancias2)
tabla_regular_CONSTRUCTOS_d_distancias2
print(tabla_regular_CONSTRUCTOS_d_distancias2)
#---IMPRIMIR LA TABLA COMO OBJETO
library(gridExtra)
library(ggplot2)
#creamos tabla con grid.table
tabla_image_elementos_distancias <- tableGrob(tabla_regular_CONSTRUCTOS_d_distancias2)
tabla_image_elementos_distancias
class(tabla_image_elementos_distancias)
ggsave("tabla_imagen.png", plot = tabla_image_elementos_distancias, device = "png", width = 8, height = 4, units = "in")
#otra forma
install.packages("knitr")
install.packages("kableExtra")
library(knitr)
library(kableExtra)
library(webshot)
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis # crea html a partir de la tabla de datos, el styling para dar estilo
temp_html <- tempfile(fileext = ".html")
temp_html
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
#install.packages("webshot2") # PARA IMPRMIR COMO IMAGEN EL ARCHIVO
library(webshot)
library(webshot2)
webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport") #(esto no funcionó)
webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport") #(esto no funcionó)
ggsave("tabla_imagen.png", plot = tabla_image_elementos_distancias, device = "png", width = 100, height = 40, units = "in")
ggsave("tabla_imagen.png", plot = tabla_image_elementos_distancias, device = "png", width = 100, height = 40, units = "in")
#creamos tabla con grid.table
tabla_image_elementos_distancias <- tableGrob(tabla_regular_CONSTRUCTOS_d_distancias2)
tabla_image_elementos_distancias
class(tabla_image_elementos_distancias)
ggsave("tabla_imagen3.png", plot = tabla_image_elementos_distancias, device = "png", width = 100, height = 40, units = "in")
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis # crea html a partir de la tabla de datos, el styling para dar estilo
temp_html <- tempfile(fileext = ".html")
temp_html
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport") #(esto no funcionó)
temp_html <- tempfile(fileext = ".html")
temp_html
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
#la función cat es para concatenar y escribir el contenido en el archivo
#eliminar tempora html
unlink(temp_html)
temp_html <- tempfile(fileext = ".html")
temp_html
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
#la función cat es para concatenar y escribir el contenido en el archivo
#eliminar tempora html
unlink(temp_html)
webshot(temp_html,"tabla_imagen2.png", cliprect = "viewport") #(esto no funcionó)
#la función cat es para concatenar y escribir el contenido en el archivo
#eliminar tempora html
unlink(temp_html)
ggsave("tabla_imagen1.png", plot = tabla_image_elementos_distancias, device = "png", width = 100, height = 40, units = "in")
ggsave("tabla_imagen1.png", plot = tabla_image_elementos_distancias, device = "png", width = 39, height = 10, units = "in")
ggsave("tabla_imagen1.png", plot = tabla_image_elementos_distancias, device = "png", width = 49, height = 10, units = "in")
#creamos archivo
imagen_constructos <- ggsave("tabla_imagen1.png", plot = tabla_image_elementos_distancias, device = "png", width = 49, height = 10, units = "in")
imagen_constructos
#creamos archivo
imagen_dist_constructos <- ggsave("Imagen_dist_constructos.png", plot = tabla_image_elementos_distancias, device = "png", width = 49, height = 10, units = "in")
imagen_dist_constructos
#creamos tabla con tableGrob
tabla_image_elementos_distancias <- tableGrob(tabla_regular_ELEMENTOS_d_distancias2)
tabla_image_elementos_distancias
class(tabla_image_elementos_distancias)
#CREAMOS ARCHIVO .PNG
imagen_dist_ELEMENTOS <- ggsave("Imagen_dist_ELMENTOS.png", plot = tabla_image_elementos_distancias, device = "png", width = 49, height = 10, units = "in")
imagen_dist_ELEMENTOS
library(readxl)
##install.packages("tidiverse")
library(tidyverse)
library(dplyr)
##install.packages("devtools") #porque lo pide el programa (no volver a instalar)
devtools::install_github("r-lib/conflicted")
repgrid_elementos <- read_excel("C:\\Users\\gilmo\\Desktop\\Repgrid_fgil_2023-12-12_18_57_04.xlsx")
repgrid_elementos
lista_vectores_e <- lapply(repgrid_elementos, as.vector)
lista_vectores_e
T_elementos_fin<- data.frame(lista_vectores_e[3:length(lista_vectores_e)-1])
T_elementos_fin
library(readxl)
##install.packages("tidiverse")
library(tidyverse)
library(dplyr)
##install.packages("devtools") #porque lo pide el programa (no volver a instalar)
devtools::install_github("r-lib/conflicted")
repgrid_elementos <- read_excel("C:\\Users\\gilmo\\Desktop\\Repgrid_fgil_2023-12-12_18_57_04.xlsx")
repgrid_elementos
lista_vectores_e <- lapply(repgrid_elementos, as.vector)
lista_vectores_e
T_elementos_fin<- data.frame(lista_vectores_e[3:length(lista_vectores_e)-1])
T_elementos_fin
t_elementos_fin_R <- round(cor(T_elementos_fin),2)
t_elementos_fin_R #correlacion elementos
repgrid_elementos
matriz_e <- as.matrix(repgrid_elementos)
print(matriz_e)
ncol(matriz_e)
nrow(matriz_e)
vector_variables_c <- matriz_e[,1] #saco vector nombre variables
vector_variables_op_c <- matriz_e[,ncol(matriz_e)]
vector_variables_c
vector_variables_op_c
#elimiino las columnas
columnas_a_eliminar <- c(1, ncol(matriz_e))
matriz_e_d <- matriz_e[, -columnas_a_eliminar]
matriz_e_d
Tabla_e_d <- data.frame(matriz_e_d)
Tabla_e_d
# tabla constructos
matriz_c <- t(matriz_e_d)
matriz_c
matriz_cn <- as.numeric(matriz_c)
matriz_cn
matriz_c_def <- matrix(matriz_cn, ncol(matriz_e)-2, nrow(matriz_e))
matriz_c_def
tabla_c <- data.frame(matriz_c_def)
tabla_c
nuevos_nombres <- as.character(vector_variables_c)
colnames(tabla_c) <- nuevos_nombres # para cambiar nombres
tabla_c
tabla_c_R <- round(cor(tabla_c),2)
tabla_c_R #correlacion elementos
#TABLA DISTANCIAS "CONSTRUCTOS"
matriz_c_def_distancias <- round(dist(matriz_c_def),2)
matriz_c_def_distancias
#TABLA DISTANCIAS "ELEMENTOS"
matriz_constructos_d__distancias <- round(dist(Tabla_e_d),2)
matriz_constructos_d__distancias
matriz_elementos_d__distancias2 <- round(dist(matriz_c_def),2)
matriz_elementos_d__distancias2
class(matriz_elementos_d__distancias2)
#----Preparo la tabla de ELEMENTOS distancias
names(Tabla_e_d) #PARA OBTENER UN VECTOR CON LOS NOMBRES DE LAS VARIBLES / TÍTULOS DE LAS COLUMNAS
vector_varible_elementos <- names(Tabla_e_d)
vector_varible_elementos
#-Montamos la tabla
matriz_regular_elementos_d_distancias2 <- as.matrix(matriz_elementos_d__distancias2)
matriz_regular_elementos_d_distancias2
colnames(matriz_regular_elementos_d_distancias2) <- vector_varible_elementos
colnames(matriz_regular_elementos_d_distancias2)
rownames(matriz_regular_elementos_d_distancias2) <- colnames(matriz_regular_elementos_d_distancias2)
tabla_regular_ELEMENTOS_d_distancias2 <- as.data.frame(matriz_regular_elementos_d_distancias2)
tabla_regular_ELEMENTOS_d_distancias2
print(tabla_regular_elementos_d_distancias2)
#Preparo la tabla de CONSTRUCTOS distancias
matriz_regular_constructos_d_distancias2 <- as.matrix(matriz_constructos_d__distancias)
matriz_regular_constructos_d_distancias2
colnames(matriz_regular_constructos_d_distancias2) <- vector_variables_c
colnames(matriz_regular_constructos_d_distancias2)
rownames(matriz_regular_constructos_d_distancias2) <- colnames(matriz_regular_constructos_d_distancias2)
tabla_regular_CONSTRUCTOS_d_distancias2 <- as.data.frame(matriz_regular_constructos_d_distancias2)
tabla_regular_CONSTRUCTOS_d_distancias2
print(tabla_regular_CONSTRUCTOS_d_distancias2)
#---IMPRIMIR LA TABLA COMO OBJETO
library(gridExtra)
library(ggplot2)
#creamos tabla con tableGrob
tabla_image_elementos_distancias <- tableGrob(tabla_regular_ELEMENTOS_d_distancias2)
tabla_image_elementos_distancias
#CREAMOS ARCHIVO .PNG
imagen_dist_ELEMENTOS <- ggsave("Imagen_dist_ELMENTOS.png", plot = tabla_image_elementos_distancias, device = "png", width = 49, height = 10, units = "in")
imagen_dist_ELEMENTOS
library(knitr)
library(kableExtra)
library(webshot)
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis # crea html a partir de la tabla de datos, el styling para dar estilo
temp_html_Elementos <- tempfile(fileext = ".html")
temp_html_Elementos
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
#-----AHORA LO MISMO CON LA TABLA DE CONSTRUCTOS - IMPRIMIR OBJETO CONSTRUCTOS
#creamos tabla con tableGrob
tabla_image_constructos_distancias <- tableGrob(tabla_regular_CONSTRUCTOS_d_distancias2)
tabla_image_constructos_distancias
#CREAMOS ARCHIVO .PNG
imagen_dist_CONSTRUCTOS <- ggsave("Imagen_dist_CONSTRUCTOS.png", plot = tabla_image_constructos_distancias, device = "png", width = 49, height = 10, units = "in")
imagen_dist_CONSTRUCTOS
library(knitr)
library(kableExtra)
library(webshot)
tabla_kable_C_dis <- kable(tabla_regular_CONSTRUCTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_C_dis # crea html a partir de la tabla de datos, el styling para dar estilo
temp_html_Constructos <- tempfile(fileext = ".html")
temp_html_Constructos
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
primer_factor <- resultado_pca$rotation [,1]
print("\nprimer factor (componente principal")
primer_factor
representación_lineal <- as.matrix(tabla_c_R) %% primer_factor
plot(representación_lineal, col = "blue", pch = 19, main = "Representación lineal del primer factor")
#creamos tabla con tableGrob
tabla_image_elementos_distancias <- tableGrob(tabla_regular_ELEMENTOS_d_distancias2)
tabla_image_elementos_distancias
#CREAMOS ARCHIVO .PNG
imagen_dist_ELEMENTOS <- ggsave("Imagen_dist_ELEMENTOS.png", plot = tabla_image_elementos_distancias, device = "png", width = 49, height = 10, units = "in")
imagen_dist_ELEMENTOS
library(knitr)
library(kableExtra)
library(webshot)
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis # crea html a partir de la tabla de datos, el styling para dar estilo
temp_html_Elementos <- tempfile(fileext = ".html")
temp_html_Elementos
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
#-----AHORA LO MISMO CON LA TABLA DE CONSTRUCTOS - IMPRIMIR OBJETO CONSTRUCTOS
#creamos tabla con tableGrob
tabla_image_constructos_distancias <- tableGrob(tabla_regular_CONSTRUCTOS_d_distancias2)
tabla_image_constructos_distancias
#CREAMOS ARCHIVO .PNG
imagen_dist_CONSTRUCTOS <- ggsave("Imagen_dist_CONSTRUCTOS.png", plot = tabla_image_constructos_distancias, device = "png", width = 49, height = 10, units = "in")
imagen_dist_CONSTRUCTOS
library(knitr)
library(kableExtra)
library(webshot)
tabla_kable_C_dis <- kable(tabla_regular_CONSTRUCTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_C_dis # crea html a partir de la tabla de datos, el styling para dar estilo
temp_html_Constructos <- tempfile(fileext = ".html")
temp_html_Constructos
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
library(readxl)
##install.packages("tidiverse")
library(tidyverse)
library(dplyr)
##install.packages("devtools") #porque lo pide el programa (no volver a instalar)
devtools::install_github("r-lib/conflicted")
repgrid_elementos <- read_excel("C:\\Users\\gilmo\\Desktop\\Ruta_archivos\\Repgrid_fgil_2023-12-12_18_57_04.xlsx")
repgrid_elementos
lista_vectores_e <- lapply(repgrid_elementos, as.vector)
lista_vectores_e
T_elementos_fin<- data.frame(lista_vectores_e[3:length(lista_vectores_e)-1])
T_elementos_fin
t_elementos_fin_R <- round(cor(T_elementos_fin),2)
t_elementos_fin_R #correlacion elementos
repgrid_elementos
matriz_e <- as.matrix(repgrid_elementos)
print(matriz_e)
ncol(matriz_e)
nrow(matriz_e)
vector_variables_c <- matriz_e[,1] #saco vector nombre variables
vector_variables_op_c <- matriz_e[,ncol(matriz_e)]
vector_variables_c
vector_variables_op_c
#elimiino las columnas
columnas_a_eliminar <- c(1, ncol(matriz_e))
matriz_e_d <- matriz_e[, -columnas_a_eliminar]
matriz_e_d
Tabla_e_d <- data.frame(matriz_e_d)
Tabla_e_d
# tabla constructos
matriz_c <- t(matriz_e_d)
matriz_c
matriz_cn <- as.numeric(matriz_c)
matriz_cn
matriz_c_def <- matrix(matriz_cn, ncol(matriz_e)-2, nrow(matriz_e))
matriz_c_def
tabla_c <- data.frame(matriz_c_def)
tabla_c
nuevos_nombres <- as.character(vector_variables_c)
colnames(tabla_c) <- nuevos_nombres # para cambiar nombres
tabla_c
tabla_c_R <- round(cor(tabla_c),2)
tabla_c_R #correlacion elementos
#TABLA DISTANCIAS "CONSTRUCTOS"
matriz_c_def_distancias <- round(dist(matriz_c_def),2)
matriz_c_def_distancias
#TABLA DISTANCIAS "ELEMENTOS"
matriz_constructos_d__distancias <- round(dist(Tabla_e_d),2)
matriz_constructos_d__distancias
matriz_elementos_d__distancias2 <- round(dist(matriz_c_def),2)
matriz_elementos_d__distancias2
class(matriz_elementos_d__distancias2)
#----Preparo la tabla de ELEMENTOS distancias
names(Tabla_e_d) #PARA OBTENER UN VECTOR CON LOS NOMBRES DE LAS VARIBLES / TÍTULOS DE LAS COLUMNAS
vector_varible_elementos <- names(Tabla_e_d)
vector_varible_elementos
#-Montamos la tabla
matriz_regular_elementos_d_distancias2 <- as.matrix(matriz_elementos_d__distancias2)
matriz_regular_elementos_d_distancias2
colnames(matriz_regular_elementos_d_distancias2) <- vector_varible_elementos
colnames(matriz_regular_elementos_d_distancias2)
rownames(matriz_regular_elementos_d_distancias2) <- colnames(matriz_regular_elementos_d_distancias2)
tabla_regular_ELEMENTOS_d_distancias2 <- as.data.frame(matriz_regular_elementos_d_distancias2)
tabla_regular_ELEMENTOS_d_distancias2
print(tabla_regular_elementos_d_distancias2)
#Preparo la tabla de CONSTRUCTOS distancias
matriz_regular_constructos_d_distancias2 <- as.matrix(matriz_constructos_d__distancias)
matriz_regular_constructos_d_distancias2
colnames(matriz_regular_constructos_d_distancias2) <- vector_variables_c
colnames(matriz_regular_constructos_d_distancias2)
rownames(matriz_regular_constructos_d_distancias2) <- colnames(matriz_regular_constructos_d_distancias2)
tabla_regular_CONSTRUCTOS_d_distancias2 <- as.data.frame(matriz_regular_constructos_d_distancias2)
tabla_regular_CONSTRUCTOS_d_distancias2
print(tabla_regular_CONSTRUCTOS_d_distancias2)
#---IMPRIMIR LA TABLA COMO OBJETO
library(gridExtra)
library(ggplot2)
#creamos tabla con tableGrob
tabla_image_elementos_distancias <- tableGrob(tabla_regular_ELEMENTOS_d_distancias2)
tabla_image_elementos_distancias
#CREAMOS ARCHIVO .PNG
imagen_dist_ELEMENTOS <- ggsave("Imagen_dist_ELEMENTOS.png", plot = tabla_image_elementos_distancias, device = "png", width = 49, height = 10, units = "in")
imagen_dist_ELEMENTOS
library(knitr)
library(kableExtra)
library(webshot)
tabla_kable_e_dis <- kable(tabla_regular_ELEMENTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_e_dis # crea html a partir de la tabla de datos, el styling para dar estilo
temp_html_Elementos <- tempfile(fileext = ".html")
temp_html_Elementos
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
#-----AHORA LO MISMO CON LA TABLA DE CONSTRUCTOS - IMPRIMIR OBJETO CONSTRUCTOS
#creamos tabla con tableGrob
tabla_image_constructos_distancias <- tableGrob(tabla_regular_CONSTRUCTOS_d_distancias2)
tabla_image_constructos_distancias
#CREAMOS ARCHIVO .PNG
imagen_dist_CONSTRUCTOS <- ggsave("Imagen_dist_CONSTRUCTOS.png", plot = tabla_image_constructos_distancias, device = "png", width = 49, height = 10, units = "in")
imagen_dist_CONSTRUCTOS
library(knitr)
library(kableExtra)
library(webshot)
tabla_kable_C_dis <- kable(tabla_regular_CONSTRUCTOS_d_distancias2, "html") %>% kable_styling("striped")
tabla_kable_C_dis # crea html a partir de la tabla de datos, el styling para dar estilo
temp_html_Constructos <- tempfile(fileext = ".html")
temp_html_Constructos
cat(tabla_kable_e_dis, file = temp_html) #el temporal html en un directorio c C:\\Users\\gilmo\\AppData\\Local\\Temp\\Rtmp6xjOC3\\filec907a7b703d.html
#install.packages("OpenRepGrid")
library(OpenRepGrid)
# INTENTO SACAR PRIMER FACTOR
resultado_pca <- prcomp(tabla_c_R, scale. = TRUE)
primer_factor <- resultado_pca$rotation [,1]
print("\nprimer factor (componente principal")
primer_factor
representación_lineal <- as.matrix(tabla_c_R) %% primer_factor
plot(representación_lineal, col = "blue", pch = 19, main = "Representación lineal del primer factor")
# INTENTO SACAR SEGUNDO FACTOR
resultado_pca2 <- prcomp(tabla_c_R, scale. = TRUE)
source("~/Proyectos rstudio/REJILLA_GIT/Leer_Rejilla_casi_ok.R", echo=TRUE)
source("~/Proyectos rstudio/REJILLA_GIT/Leer_Rejilla_casi_ok.R", echo=TRUE)
source("~/Proyectos rstudio/REJILLA_GIT/Leer_Rejilla_casi_ok.R", echo=TRUE)
source("~/Proyectos rstudio/REJILLA_GIT/Leer_Rejilla_casi_ok.R", echo=TRUE)
